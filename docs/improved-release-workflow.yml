name: Release and Publish to NPM

on:
  push:
    branches:
      - main
    paths:
      - ".changeset/*.md"
      - "packages/*/package.json"
      - "packages/*/src/**"
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

permissions:
  id-token: write
  contents: write
  pull-requests: write
  packages: write

jobs:
  # 构建和测试作业
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies
        run: |
          # 尝试使用frozen-lockfile，如果失败则更新锁定文件
          if ! pnpm install --frozen-lockfile; then
            echo "⚠️ Lockfile is outdated, updating dependencies..."
            pnpm install
            echo "📝 Lockfile has been updated"
          fi

      - name: Build packages
        run: pnpm run build

      - name: Run tests
        run: pnpm run test --if-present

  # 发布作业
  release:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true) || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies
        run: |
          # 尝试使用frozen-lockfile，如果失败则更新锁定文件
          if ! pnpm install --frozen-lockfile; then
            echo "⚠️ Lockfile is outdated, updating dependencies..."
            pnpm install
            echo "📝 Lockfile has been updated"
          fi

      - name: Build packages
        run: pnpm run build

      # 检查是否有changeset文件
      - name: Check for changesets
        id: check-changesets
        run: |
          if [ -n "$(ls .changeset/*.md 2>/dev/null | grep -v README.md)" ]; then
            echo "has_changesets=true" >> $GITHUB_OUTPUT
            echo "📦 Found changesets, proceeding with release"
          else
            echo "has_changesets=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No changesets found"
          fi

      # 使用 Changesets Action 自动化发布
      - name: Create Release PR or publish to npm
        id: changesets
        if: steps.check-changesets.outputs.has_changesets == 'true'
        uses: changesets/action@v1
        with:
          createGithubReleases: true
          publish: pnpm changeset publish
          version: pnpm changeset version
          title: "chore: release packages"
          commit: "chore: release packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      # 手动触发发布（当workflow_dispatch时）
      - name: Manual release
        if: github.event_name == 'workflow_dispatch' && steps.check-changesets.outputs.has_changesets == 'false'
        run: |
          echo "🚀 Creating manual changeset for ${{ github.event.inputs.release_type }} release"
          pnpm changeset add --empty
          pnpm changeset version
          pnpm changeset publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      # 打印发布信息
      - name: Print release information
        if: steps.changesets.outputs.published == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          echo "🎉 Packages published successfully!"
          echo "Published packages:"
          if [ -f ".changeset/published-packages.json" ]; then
            cat .changeset/published-packages.json
          fi
          
          echo ""
          echo "📦 Package versions on NPM:"
          echo "UI: $(npm show @tinyflow-ai/ui version 2>/dev/null || echo 'Not found')"
          echo "React: $(npm show @tinyflow-ai/react version 2>/dev/null || echo 'Not found')"
          echo "Vue: $(npm show @tinyflow-ai/vue version 2>/dev/null || echo 'Not found')"
          echo "Svelte: $(npm show @tinyflow-ai/svelte version 2>/dev/null || echo 'Not found')"

      # 发布失败时的处理
      - name: Handle publish failure
        if: failure()
        run: |
          echo "❌ Publishing failed. Please check the logs above."
          echo "Common issues:"
          echo "1. NPM_TOKEN secret not set or expired"
          echo "2. Package version already exists"
          echo "3. Build or test failures"
          echo "4. Network connectivity issues"
          echo "5. Lockfile synchronization issues"
          echo ""
          echo "💡 To fix lockfile issues:"
          echo "  pnpm install"
          echo "  git add pnpm-lock.yaml"
          echo "  git commit -m 'fix: update lockfile'"
